/**
 * @class btkRemoveMetaData
 * @brief Remove a metada and return an updated list of the metada in the acquisition.
 * @syntax{md = %btkRemoveMetaData(h\, idx)\n md = %btkRemoveMetaData(h\, idx\, subidx)\n md = %btkRemoveMetaData(h\, idx\, subidx\, ...)\n md = %btkRemoveMetaData(h\, label)\n md = %btkRemoveMetaData(h\, label\, sublabel)\n md = %btkRemoveMetaData(h\, label\, sublabel\, ...)}
 * @param h Handle pointing to a C++ btk::Acquisition object.
 * @param idx Integer specifying the index of a metadata.
 * @param subidx Integer specifying the index of a metadata.
 * @param label String specifying the label of a metadata.
 * @param sublabel String specifying the label of a metadata.
 * @param ... Others integers and/or strings to select the metadata to remove.
 * @retval md Structure with the same format than the function btkGetMetaData.
 *
 * @par Detailed description:
 * @b Warning: Removing some metadata might alter an acquisition. For example, removing
 * the metadata FORCE_PLATFORM has for effect to not be able to extract force platform
 * data as it contains their geometrical informations.
 * \n\n
 * <tt>%btkRemoveMetaData(h\, idx)</tt> removes the metadata at the given index @c idx contained in the metadata's root.
 * <tt>%btkRemoveMetaData(h\, idx, subidx)</tt> removes the metadata contained at the index @c subidx which is contained in the metadata with the index @c idx.
 * <tt>%btkRemoveMetaData(h\, idx, subidx, ...)</tt> removes any metadata specified by the given indices.
 * <tt>%btkRemoveMetaData(h\, label)</tt> removes the metadata with the label @c label contained in the metadata's root.
 * <tt>%btkRemoveMetaData(h\, label, sublabel)</tt> removes the metadata with the label @c sublabel contained in the metadata with the label @c label.
 * <tt>%btkRemoveMetaData(h\, label, sublabel, ...)</tt> removes any metadata specified by the given labels.
 * \n\n
 * You can mix label and index to remove a metadata entry.
 * \n\n
 * The number of sub-level is infinite. However, the main common use of the metadata is to use 2 levels. This use was  introduced in the C3D format.
 *
 * @sa btkRemoveAnalog, btkRemoveAnalysisParameterm, btkRemoveEvent, btkRemovePoint
 * @ingroup BTKMatlabAcquisitionModifier
 */