/**
 * @class btkWriteAcquisition
 * @brief Write acquisition's data into file (C3D, TRC, ...).
 * @syntax{%btkWriteAcquisition(h\, filename\, option\, value\, ...)}
 * @param h Handle pointing to a C++ btk::Acquisition object.
 * @param filename String with the path of the acquisition to export.
 * @param option String (see the detailed description for the list of the available options).
 * @param value Associated value with the given option.
 * @param ... Other couple of option/value.
 *
 * @par Detailed description:
 * <tt>%btkWriteAcquisition(h, filename)</tt> exports acquisition's data represented 
 * as the handle @c g into the file @c filename.  The choice of the file format is
 * based on the file extension in @c filename (for example, '.trc' or '.c3d')
 * \n\n
 * <tt>%btkWriteAcquisition(h, filename, option, value, ...)</tt> gives somes extra-options for some file format. 
 * \n\n
 * The @c ByteOrder option can receive 3 values:
 * - @c IEEE_LittleEndian: write integer and float in x86 format (PC).
 * - @c IEEE_BigEndian: write integer and float in PPC/MIPS format (SGI).
 * - @c VAX_LittleEndian: write integer and float in VAX format (DEC).
 * The @c StorageFormat option can receive 2 values:
 * - @c Integer: Acquisition data are scaled and stored as 16 bits integer.
 * - @c Float: Acquisition data are stored as floating values.
 * The @c RegenerateInternals option is an advanced option which can receive 2 values.
 * - @c DataBased: Internal file format configuration (if any) is regenerated based on
 *   the acquisition data (i.e. points and analog channels plus events). This
 *   option is the default one.
 * - @c MetadataBased: Internal file format configuration (if any) is regenerated 
 *   based on the metadata. WARNING: Use this value carefully as it could be easy to
 *   corrupt file format internals with it.
 * .
 * \n
 * Without any option, a C3D File is written using the machine byte order
 * and the float as storage format. Using these options on ASCII formats 
 * (for example TRC) have no effect on the file data.
 * The writing of an empty acquisition (no point and no analog channel) in
 * a C3D file will create a template C3D file. Only the metadata will be saved.
 * 
 * @par Examples
 * <tt>%btkWriteAcquisition(acq, 'filename.c3d', 'StorageFormat', 'Float');</tt>\n
 * <tt>%btkWriteAcquisition(acq, 'filename.c3d', 'ByteOrder', 'VAX_LittleEndian'); </tt>\n
 * <tt>%btkWriteAcquisition(acq, 'filename.c3d', 'StorageFormat', 'Integer', 'ByteOrder', 'IEEE_LittleEndian');</tt>
 * 
 * @sa btkCloseAcquisition, btkReadAcquisition
 * @ingroup BTKMatlabIO
 */
