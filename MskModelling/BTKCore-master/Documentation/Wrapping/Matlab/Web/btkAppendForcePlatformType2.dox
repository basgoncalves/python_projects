/**
 * @class btkAppendForcePlatformType2
 * @brief Append a virtual force platform of type 2 (Fx,Fy,Fz,Mx,My,Mz).
 * @syntax{%btkAppendForcePlatformType2(h\, forces\, moments\, corners)\n %btkAppendForcePlatformType2(h\, forces\, moments\, corners\, origin)\n %btkAppendForcePlatformType2(h\, forces\, moments\, corners\, origin\, localframe)}
 * @param h Handle pointing to a C++ btk::Acquisition object.
 * @param forces Matrix (n,3) where 'n' is the number of analog frames in the acquisition. If the given data corresponds to the number of point frames, these data will be then interpolated to fit the number of analog frames.
 * @param moments Matrix (n,3) where 'n' is the number of analog frames in the acquisition. If the given data corresponds to the number of point frames, these data will be then interpolated to fit the number of analog frames.
 * @param corners Matrix (4,3) corresponding to the location of the corners in the global frame (see detailed description for the order of the corners).
 * @param origin Column vector containing the location of the force plate origin related to it surface's center and expressed in the global frame.
 * @param localframe Flag (set to 0 by default) which indicates if the given @a forces and @a moments are expressed in the local or global frame.
 *
 * @par Detailed description:
 * <tt>%btkAppendForcePlatformType2(h, forces, moments, corners)</tt> creates
 * a virtual force platform based only on the reaction @a forces and @a moments
 * expressed in the global frame. This function updates all the metadata in
 * the group FORCE_PLATFORM and append 6 analog channels.
 * \n\n
 * <tt>%btkAppendForcePlatformType2(h, forces, moments, corners, origin)</tt> sets
 * also the @a origin of the force platform compare to its surface. 
 * The @a origin must be expressed in the frame of the force plate. Thus the 
 * verical component should be negative as the surface is higher than the 
 * origin. Setting the @a origin to an empty matrix has the same effect than 
 * giving an origin equals to [0,0,0].
 * \n\n
 * <tt>%btkAppendForcePlatformType2(h, forces, moments, corners, origin, localframe)</tt>
 * create a virtual force platform using @a forces and @a moments expressed in the 
 * local frame if @a localframe is not set to 0. The content of @a corners and @a origin
 * still must be expressed in the global frame. The use of @a localframe can be useful
 * if you use data recorded directly from the force platform.
 * \n\n
 * <b>Note</b>: The moment must be expressed at the (surface) origin of the plate.
 * The @a corners are numbered from 1 to 4 and refer to the quadrant numbers 
 * in the X-Y plane of the force platform coordinate system (not the 3D 
 * point reference coordinate system). These are +x+y, -x+y, -x-y, and 
 * +x-y, with respect to the force plate coordinate system. The @a origin of
 * the platform is set by default to [0,0,0] meaning that it has no 
 * thickness. If your forces and moments come from raw data recorded by a 
 * force platform (and then recorded to the location of the sensor), it is
 * strongly advised to use the sensor distances given in the data sheet.
 * \n\n
 * You can retrieve easily the data of the new force platform by using one
 * of the following functions: 
 * - btkGetForcePlatforms
 * - btkGetForcePlatformWrenches
 * - btkGetGroundReactionWrenches
 *
 * @ingroup BTKMatlabBasicFilters
 */
