/**
 * @class btkGetAnalog
 * @brief Extract one analog channel from the given acquisition based on an index or a string.
 * @syntax{[values\, info] = %btkGetAnalog(h\, idx)\n [values\, info] = %btkGetAnalog(h\, label)}
 * @param h Handle pointing to a C++ btk::Acquisition object.
 * @param idx Integer containing the index of the analog channel to extract.
 * @param label String containing the label of the analog channel to extract.
 * @retval values Matrix of reals (n,1) containing the analog data.
 * @retval info Structure with the informations related to the analog channels.
 *   - @c info.label: True label of the extracted channel ;
 *   - @c info.description: Description of the extracted channel ;
 *   - @c info.gain: Gain (integer) for the extracted channel ;
 *   - @c info.offset: Numerical offset (integer) for the extracted channel ;
 *   - @c info.scale: Scaling factor (float) for the extracted channel ;
 *   - @c info.frequency: Analog's frequency ;
 *   - @c info.units: Unit (string) for the extracted channel.
 * 
 * @sa btkSetAnalogDescription, btkSetAnalogLabel, btkSetAnalogOffset, btkSetAnalogScale, btkSetAnalogValues
 * @ingroup BTKMatlabAcquisitionAccessor
 */
