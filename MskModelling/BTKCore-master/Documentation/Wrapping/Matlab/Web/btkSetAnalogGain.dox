/**
 * @class btkSetAnalogGain
 * @brief Modify analog's gain and return updated analogs.
 * @syntax{[analogs\, analogsInfo] = %btkSetAnalogGain(h\, idx\, newgain)\n [analogs\, analogsInfo] = %btkSetAnalogGain(h\, label\, newgain)}
 * @param h Handle pointing to a C++ btk::Acquisition object.
 * @param idx Integer containing the index of the analog channel to modify.
 * @param label String containing the label of the analog channel to modify.
 * @param newgain Integer wit the new gain (see the detailed description to know the possible gain).
 * @retval analogs Updated list of analog channels. Its format is the same than using the function btkGetAnalogs.
 * @retval analogsInfo Updated informations related to the analog channels. Its format is the same than using the function btkGetAnalogs.
 *
 * @par Detailed description:
 * <tt>%btkSetAnalogGain(h, idx, newgain)</tt> modifies the gain of the analog channel specified by the index @c idx.
 * <tt>%btkSetAnalogGain(h, label, newgain)</tt> modifies the gain of the analog channel specified by the label @c label.
 * \n\n
 * The available values for the new gain are:
 * - 0 : unknown gain
 * - 1 : +/- 10 volts
 * - 2 : +/- 5 volts
 * - 3 : +/- 2.5 volts
 * - 4 : +/- 1.25 volts
 * - 5 : +/- 1 volt
 * 
 * @sa btkGetAnalog, btkSetAnalogDescription, btkSetAnalogLabel, btkSetAnalogOffset, btkSetAnalogScale, btkSetAnalogUnit, btkSetAnalogValues
 * @ingroup BTKMatlabAnalogModifier
 */