namespace btk
{
  /**
   * @class btkAcquisitionFileIO
   * @brief Interface to read/write acquisition's files.
   * @ingroup BTKIO
   */
  /**
   * @var btkAcquisitionFileIO::TypeNotApplicable
   * Enum value used to indicate the type of the file is not yet known.
   */
  /**
   * @var btkAcquisitionFileIO::ASCII
   * Enum value for ASCII file.
   */
  /**
   * @var btkAcquisitionFileIO::Binary
   * Enum value for binary file.
   */
  /**
   * @var btkAcquisitionFileIO::OrderNotApplicable
   * Enum value used to indicate the byte order is not yet known.
   */
  /**
   * @var btkAcquisitionFileIO::IEEE_LittleEndian
   * Enum value for a byte order in little endian with a IEEE float representation.
   */
  /**
   * @var btkAcquisitionFileIO::VAX_LittleEndian
   * Enum value for a byte order in little endian with a VAX float representation.
   */
  /**
   * @var btkAcquisitionFileIO::IEEE_BigEndian
   * Enum value for a byte order in big endian with a IEEE float representation.
   */
  /**
   * @var btkAcquisitionFileIO::StorageNotApplicable
   * Acquisition's data have no storage format.
   */
  /**
   * @var btkAcquisitionFileIO::Float
   * Acquisition's data are stored as float values.
   */
  /**
   * @var btkAcquisitionFileIO::Integer
   * Acquisition's data are stored as integer values.
   */
  /**
   * @var btkAcquisitionFileIO::UpdateNotApplicable
   * No update is done and existing internals are used.
   */ 
  /**
   * @var btkAcquisitionFileIO::NoUpdate
   * Same as AcquisitionFileIO::UpdateNotApplicable.
   */ 
  /**
   * @var btkAcquisitionFileIO::DataBasedUpdate
   * Internals are updated using acquisition data (points, analog channels, events).
   */
  /**
   * @var btkAcquisitionFileIO::MetaDataBasedUpdate
   * Internals are updated using acquisition metadata.
   */
  /**
   * @var btkAcquisitionFileIO::FileFormatOption
   * Extension for specific file format extension. It is important to distinguish each new option by adding 2-based integer (i.e. 1, 2, 4, 8, 16, etc.).
   */
  
  /**
   * @class btkAcquisitionFileReader
   * @brief Reader for files which contain acquisition data (C3D, TRC, ...).
   * @ingroup BTKIO
   */ 
   
  /**
   * @class btkAcquisitionFileWriter
   * @brief Writer for files which contain acquisition data (C3D, TRC, ...).
   * @ingroup BTKIO
   */
    
  /**
   * @class btkANBFileIO
   * @brief Class to read/write ANB files.
   * @ingroup BTKIO
   */
    
  /**
   * @class btkANCFileIO
   * @brief Class to read/write ANC files.
   * @ingroup BTKIO
   */
   
  /**
   * @class btkANGFileIO
   * @brief Class to read ANG files.
   * @ingroup BTKIO
   */
   
  /**
   * @class btkC3DFileIO
   * @brief Class to read/write C3D files.
   * @ingroup BTKIO
   */
  /**
   * @var btkC3DFileIO::Signed
   * Analog's data are stored as signed integer values.
   */
  /**
   * @var btkC3DFileIO::Unsigned
   * Analog's data are stored as unsigned integer values.
   */
  /**
   * @var btkC3DFileIO::CompatibleVicon
   * Checks and updates (if necessary) acquisitions parameter which can crash 
   * Vicon's product (Polygon, Workstation, Nexus).
   */
   
  /**
   * @class btkCALForcePlateFileIO
   * @brief Class to read/write force plate CAL files.
   * @ingroup BTKIO
   */
   
  /**
   * @class btkCLBFileIO
   * @brief Class to read CLB Contec Inc file.
   * @ingroup BTKIO
   */
   
  /**
   * @class btkDelsysEMGFileIO
   * @brief Class to read Delsys EMG files.
   * @ingroup BTKIO
   */
  
  /**
   * @class btkEMFFileIO
   * @brief Class to read EMF files.
   * @ingroup BTKIO
   */
   
  /**
   * @class btkEMxFileIO
   * @brief Class to read EMG files.
   * @ingroup BTKIO
   */
   
  /**
   * @class btkGRxFileIO
   * @brief Class to read GR* files.
   * @ingroup BTKIO
   */
   
  /**
   * @class btkMDFFileIO
   * @brief Class to read MDF files (Codamotion).
   * @ingroup BTKIO
   */
  
  /**
   * @class btkMOMFileIO
   * @brief Class to read MOM files.
   * @ingroup BTKIO
   */
   
  /**
   * @class btkPWRFileIO
   * @brief Class to read PWR files.
   * @ingroup BTKIO
   */
   
  /**
   * @class btkRAxFileIO
   * @brief Class to read RAH, RAW files.
   * @ingroup BTKIO
   */

  /**
   * @class btkRICFileIO
   * @brief Class to read RIC files.
   * @ingroup BTKIO
   */
   
  /**
   * @class btkTDFFileIO
   * @brief Class to read TDF files.
   * @ingroup BTKIO
   */

  /**
   * @class btkTRBFileIO
   * @brief Class to read/write TRB files.
   * @ingroup BTKIO
   */
   
  /**
   * @class btkTRCFileIO
   * @brief Class to read/write TRC files.
   * @ingroup BTKIO
   */
   
  /**
   * @class btkXLSOrthoTrakFileIO
   * @brief Class to read XLS (Orthotrak) files.
   * @ingroup BTKIO
   */
   
  /**
   * @class btkXMOVEFileIO
   * @brief Class to read XMOVE files (Codamotion).
   * @ingroup BTKIO
   */
}